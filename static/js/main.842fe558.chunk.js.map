{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","app/helpers/getFilteredTodos.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","actions","todo","type","payload","currentTodoReducer","state","action","value","initialState","query","status","All","filterReducer","todosReducer","todos","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","filterParams","visibleTodos","useMemo","filterParam","filteredTodos","normalizedQuery","trim","toLowerCase","Active","completed","Completed","title","includes","getFilteredTodos","length","className","map","i","onClick","currentTodoActions","id","TodoFilter","onSubmit","event","preventDefault","onChange","filterActions","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","isLoading","setIsLoading","user","setUser","useEffect","userId","catch","Error","finally","href","email","name","App","response","todosActions","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.842fe558.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetFilterStatus = {\n  type: 'filter/SET_STATUS',\n  payload: Status,\n};\n\ntype SetFilterQuery = {\n  type: 'filter/SET_QUERY',\n  payload: string,\n};\n\ntype Action = SetFilterStatus | SetFilterQuery;\n\nexport interface FilterState {\n  query: string,\n  status: Status,\n}\n\nconst setFilter = (value: Status) => ({\n  type: 'filter/SET_STATUS',\n  payload: value,\n});\n\nconst setQuery = (value: string) => ({\n  type: 'filter/SET_QUERY',\n  payload: value,\n});\n\nexport const actions = { setFilter, setQuery };\n\nconst initialState: FilterState = {\n  query: '',\n  status: Status.All,\n};\n\nconst filterReducer = (\n  state: FilterState = initialState,\n  action: Action,\n): FilterState => {\n  switch (action.type) {\n    case 'filter/SET_STATUS':\n      return { ...state, status: action.payload };\n\n    case 'filter/SET_QUERY':\n      return { ...state, query: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET',\n  payload: Todo[],\n};\n\nconst set = (value: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: value,\n});\n\nexport const actions = { set };\n\nconst todosReducer = (todos: Todo[] = [], action: SetTodosAction): Todo[] => {\n  switch (action.type) {\n    case 'todos/SET':\n      return [...todos, ...action.payload];\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React, { useMemo } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { getFilteredTodos } from '../../app/helpers/getFilteredTodos';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\n\nexport const TodoList: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n  const filterParams = useAppSelector(state => state.filter);\n\n  const visibleTodos = useMemo(() => {\n    return getFilteredTodos(todos, filterParams);\n  }, [todos, filterParams]);\n\n  return (\n    <>\n      {!visibleTodos.length ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {visibleTodos.map((todo, i) => (\n              <tr data-cy=\"todo\" key={todo.id}>\n                <td className=\"is-vcentered\">{i + 1}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={todo.completed ? 'has-text-success' : 'has-text-danger'}>\n                    {todo.title}\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => dispatch(currentTodoActions.setTodo(todo))}\n                  >\n                    <span className=\"icon\">\n                      <i className={`far ${currentTodo?.id === todo.id ? 'fa-eye-slash' : 'fa-eye'}`} />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import { FilterState } from '../../features/filter';\nimport { Status } from '../../types/Status';\nimport { Todo } from '../../types/Todo';\n\nexport const getFilteredTodos = (\n  todos: Todo[],\n  filterParam: FilterState,\n) => {\n  let filteredTodos = todos;\n  const normalizedQuery = filterParam.query.trim().toLowerCase();\n\n  switch (filterParam.status) {\n    case Status.Active:\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n      break;\n    case Status.Completed:\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n      break;\n    default:\n      break;\n  }\n\n  if (normalizedQuery) {\n    filteredTodos = filteredTodos\n      .filter(todo => todo.title.toLowerCase().includes(normalizedQuery));\n  }\n\n  return filteredTodos;\n};\n","import React, { ChangeEvent } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const { status, query } = useAppSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const handleStatusChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    dispatch(filterActions.setFilter(event.target.value as Status));\n  };\n\n  const handleQueryChange = (event: ChangeEvent<HTMLInputElement>) => {\n    dispatch(filterActions.setQuery(event.target.value));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={status}\n            data-cy=\"statusSelect\"\n            onChange={handleStatusChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(filterActions.setQuery(''))}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    setIsLoading(true);\n    if (currentTodo) {\n      getUser(currentTodo?.userId)\n        .then(setUser)\n        .catch(() => {\n          throw new Error();\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(currentTodoActions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{currentTodo?.title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {!currentTodo?.completed ? (\n                <strong className=\"has-text-danger\">Planned</strong>\n              ) : (\n                <strong className=\"has-text-success\">Done</strong>\n              )}\n\n              {' by '}\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { actions as todosActions } from './features/todos';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const todos = useAppSelector(state => state.todos);\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then((response) => {\n        dispatch(todosActions.set(response));\n      })\n      .catch(() => {\n        throw new Error('Unable to load data from server');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              {!!todos.length && <TodoFilter />}\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {!!todos.length && <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}